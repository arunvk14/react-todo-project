{"version":3,"sources":["FunctionBased/components/TodoItem.module.css","FunctionBased/components/TodoItem.js","FunctionBased/components/TodosList.js","FunctionBased/components/Header.js","FunctionBased/components/InputTodo.js","FunctionBased/components/SinglePage.js","FunctionBased/components/About.js","FunctionBased/components/NotMatch.js","FunctionBased/components/Navbar.js","FunctionBased/components/TodoContainer.js","index.js"],"names":["module","exports","TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","type","checked","checkbox","style","onChange","handleChangeProps","textInput","value","e","setUpdate","target","onKeyDown","event","key","onClick","color","fontSize","deleteTodoProps","disabled","TodosList","todos","map","UpdateTodoProps","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","setCompleted","name","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","path","to","NotMatch","links","text","Navbar","navbarOpen","setNavbarOpen","prev","width","height","link","exact","activeClassName","TodoContainer","setTodos","temp","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1152d589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__6NYn9\",\"checkbox\":\"TodoItem_checkbox__3tG5Z\",\"textInput\":\"TodoItem_textInput__2Df0-\"};","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TodoItem.module.css\"\r\nimport {\r\n    AiOutlineDelete, AiOutlineEdit, AiOutlineSave\r\n} from \"react-icons/ai\"\r\nconst TodoItem = props => {\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n    }\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n    const editTodoProps = id => {\r\n \r\n\r\n        setEditing(true)\r\n}\r\nconst Update = () => {\r\n    setEditing(false)\r\n}\r\nconst { completed, id, title } = props.todo\r\nlet viewMode = {}\r\nlet editMode = {}\r\n\r\nif (editing) {\r\n    viewMode.display = \"none\"\r\n}\r\nelse {\r\n    editMode.display = \"none\"\r\n}\r\n\r\nuseEffect(() => {\r\n    return () => {\r\n        console.log(\"Cleaning Up..\")\r\n    }\r\n}, [])\r\nreturn (\r\n\r\n    <li className={styles.item}>\r\n        <div onDoubleClick={handleEditing}>\r\n\r\n            <input type=\"checkbox\" checked={completed}\r\n                className={styles.checkbox} style={editMode}\r\n                onChange={() => props.handleChangeProps(id)} />\r\n\r\n            <input type=\"text\"\r\n                style={editMode}\r\n                className={styles.textInput}\r\n                value={title}\r\n                onChange={e => {\r\n                    props.setUpdate(e.target.value, id)\r\n                }}\r\n                onKeyDown={handleUpdatedDone} />\r\n\r\n\r\n            <button style={viewMode} onClick={() => editTodoProps(id)}>\r\n                <AiOutlineEdit style={{color:\"darkblue\",fontSize:\"20px\"}}/>\r\n            </button>\r\n\r\n            <button style={editMode} onClick={() => Update()} >\r\n                <AiOutlineSave style={{color:\"darkgreen\",fontSize:\"20px\"}}/>\r\n            </button>\r\n\r\n            <button style={viewMode} onClick={() => props.deleteTodoProps(id)}>\r\n                <AiOutlineDelete style={{color:\"orangered\",fontSize:\"20px\"}}/>\r\n            </button>\r\n            <div className=\"div\" style={viewMode}>\r\n                <input type=\"checkbox\" checked={completed}\r\n                    className={styles.checkbox} disabled\r\n                    onChange={() => props.handleChangeProps(id)} style={viewMode} />\r\n                {/* <span >\r\n                        <i className=\"fa-light fa-pen-to-square\"></i>\r\n                        {title}\r\n                    </span> */}\r\n                <span >{title}</span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </li>\r\n\r\n)\r\n}\r\nexport default TodoItem\r\n// class TodoItem extends React.Component {\r\n//     state = {\r\n//         editing: false,\r\n//         titlename: ''\r\n//     }\r\n//     handleEditing = () => {\r\n//         this.setState({\r\n//             editing: true\r\n//         })\r\n//     }\r\n//     handleUpdatedDone = event => {\r\n//         if (event.key === \"Enter\") {\r\n//             this.setState({ editing: false })\r\n//         }\r\n//     }\r\n//     editTodoProps = id => {\r\n//         this.setState({\r\n//             editing: true\r\n//         })\r\n\r\n//     }\r\n//     Update() {\r\n//         this.setState({\r\n//             editing: false\r\n//         })\r\n//     }\r\n//     componentWillUnmount() {\r\n//         console.log(\"Cleaning up...../.../....\")\r\n//     }\r\n//     render() {\r\n\r\n//         const { completed, id, title } = this.props.todo\r\n//         let viewMode = {}\r\n//         let editMode = {}\r\n\r\n//         if (this.state.editing) {\r\n//             viewMode.display = \"none\"\r\n//         }\r\n//         else {\r\n//             editMode.display = \"none\"\r\n//         }\r\n//         return (\r\n            // <li className={styles.item}>\r\n            //     <div onDoubleClick={this.handleEditing}>\r\n\r\n\r\n            //         <input type=\"checkbox\" checked={completed}\r\n            //             className={styles.checkbox} style={editMode}\r\n            //             onChange={() => this.props.handleChangeProps(id)} />\r\n\r\n            //         <input type=\"text\"\r\n            //             style={editMode}\r\n            //             className={styles.textInput}\r\n            //             value={title}\r\n            //             onChange={e => {\r\n            //                 this.props.setUpdate(e.target.value, id)\r\n            //             }}\r\n            //             onKeyDown={this.handleUpdatedDone} />\r\n\r\n\r\n            //         <button style={viewMode} onClick={() => this.editTodoProps(id)}>\r\n\r\n            //             <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\"\r\n            //                 viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} >\r\n            //                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n            //                     d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n            //             </svg>\r\n            //         </button>\r\n            //         <button style={editMode} onClick={() => this.Update()} ><svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            //             className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            //             <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n            //                 d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\r\n            //         </svg></button>\r\n            //         <button style={viewMode} onClick={() => this.props.deleteTodoProps(id)}>\r\n            //             <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"  >\r\n            //                 <path d=\"M1 2.5A2.5 2.5 0 013.5 0h8.75a.75.75 0 01.75.75v7.5a.75.75 0 01-1.5 0V1.5h-8a1 1 0 00-1 1v6.708A2.492 2.492 0 013.5 9h4.75a.75.75 0 010 1.5H3.5a1 1 0 100 2h4.75a.75.75 0 010 1.5H3.5A2.5 2.5 0 011 11.5v-9z\"></path>\r\n            //                 <path d=\"M11.28 10.22a.75.75 0 10-1.06 1.06L11.94 13l-1.72 1.72a.75.75 0 101.06 1.06L13 14.06l1.72 1.72a.75.75 0 101.06-1.06L14.06 13l1.72-1.72a.75.75 0 10-1.06-1.06L13 11.94l-1.72-1.72z\"></path></svg>\r\n            //         </button>\r\n            //         <div className=\"div\" style={viewMode}>\r\n            //             <input type=\"checkbox\" checked={completed}\r\n            //                 className={styles.checkbox} disabled\r\n            //                 onChange={() => this.props.handleChangeProps(id)} style={viewMode} />\r\n            //             <span >\r\n            //                 {/* <i className=\"fa-light fa-pen-to-square\"></i> */}\r\n            //                 {title}\r\n            //             </span>\r\n            //         </div>\r\n            //     </div>\r\n\r\n\r\n            // </li>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default TodoItem","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nconst TodosList = props => {\r\n    return (\r\n        <ul>\r\n            {props.todos.map(todo => (\r\n                <TodoItem key={todo.id} todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                    UpdateTodoProps={props.UpdateTodoProps}\r\n                />\r\n            ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n// class TodosList extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <ul>\r\n//                 {\r\n//                     this.props.todos.map(todo => (\r\n//                         <TodoItem key={todo.id} todo={todo}\r\n//                             handleChangeProps={this.props.handleChangeProps}\r\n//                             setUpdate={this.props.setUpdate}\r\n//                             UpdateTodoProps={this.props.UpdateTodoProps}\r\n//                             deleteTodoProps={this.props.deleteTodoProps}\r\n\r\n//                         />\r\n//                     ))\r\n//                 }\r\n//             </ul >\r\n//         )\r\n//     }\r\n// }\r\nexport default TodosList","import React from 'react'\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\"\r\n    }\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 style={{\r\n                fontSize: \"6rem\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"2rem\",\r\n                lineHeight: \"1em\",\r\n                color: \"#ececec\",\r\n                textTransform: \"lowercase\",\r\n                textAlign: \"center\",\r\n            }}>\r\n                todos\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React, { useState } from \"react\";\r\nimport { BiAddToQueue } from \"react-icons/bi\"\r\n\r\n\r\nconst InputTodo = props => {\r\n    const [inputText, setInputText] = useState({\r\n        title: '',\r\n    })\r\n\r\n    const [completed, setCompleted] = useState(false)\r\n\r\n    const onChange = e => {\r\n\r\n        if (e.target.name === \"completed\") {\r\n            setCompleted(e.target.checked)\r\n            debugger\r\n        }\r\n        else {\r\n            setInputText({\r\n                ...inputText,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title, completed)\r\n            setInputText({\r\n                title: ''\r\n            })\r\n            setCompleted(false)\r\n        }\r\n        else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            {/* <div className=\"container\" style={ContainerStyle}> */}\r\n                <div className=\"checkbox-container\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"completed\"\r\n                        className=\"input-checkbox\"\r\n                        checked={completed}\r\n                        // value={completed}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Add todo....\"\r\n                    value={inputText.title}\r\n                    name=\"title\"\r\n                    onChange={onChange}\r\n                />\r\n                <button className=\"input-submit\" ><BiAddToQueue /></button>\r\n            {/* </div> */}\r\n        </form >\r\n    )\r\n\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport { useParams } from \"react-router-dom\";\r\nconst SinglePage = () => {\r\n\r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About The App\",\r\n            description:\r\n                \"In this app, you can add, submit, delete and edit items. To edit items, simplyouble click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\"\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About The Author\",\r\n            description: \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n        },\r\n    ]\r\n    const { slug } = useParams()\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n    const { title, description } = aboutContent\r\n\r\n\r\n    return (\r\n        <div className=\"main__content\">\r\n            <h1>\r\n                {title}\r\n            </h1>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePage;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport SinglePage from \"./SinglePage\"\r\nconst About = () => {\r\n    const { url, path } = useRouteMatch()\r\n    return (\r\n        <div className=\"about__content\">\r\n            <ul className=\"about__list\">\r\n                <li>\r\n                    <Link to={`${url}/about-app`}>About App</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/about-author`}>About Author</Link>\r\n                </li>\r\n            </ul>\r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <div className=\"NoMatch\">\r\n            <h1>No match for this page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotMatch;","import React, { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport { FiMenu } from \"react-icons/fi\"\r\nconst Navbar = () => {\r\n    const [navbarOpen, setNavbarOpen] = useState(false)\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n    return (\r\n        <nav className=\"navBar\">\r\n\r\n            <button onClick={handleToggle}>\r\n                {navbarOpen ? (<MdClose\r\n                    style={{ color: \"red\", width: \"40px\", height: \"40px\" }} />\r\n                ) : (\r\n                    <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\r\n                )}\r\n            </button>\r\n\r\n            <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n                {links.map(link => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink\r\n                                exact\r\n                                activeClassName=\"active-link\"\r\n                                to={link.path}\r\n                                onClick={() => closeMenu()}\r\n                            >\r\n                                {link.text}\r\n                            </NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav >\r\n    )\r\n}\r\nconst links = [\r\n    {\r\n        id: 1,\r\n        path: \"/\",\r\n        text: \"Home\",\r\n    },\r\n    {\r\n        id: 2,\r\n        path: \"/about\",\r\n        text: \"About\"\r\n    },\r\n    {\r\n        id: 3,\r\n        path: \"/*\",\r\n        text: \"New Page\"\r\n    }\r\n]\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport NotMatch from \"./NotMatch\"\r\nimport Navbar from \"./Navbar\";\r\nconst TodoContainer = () => {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const handleChange = id => {\r\n        setTodos(prevState =>\r\n            prevState.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n                return todo\r\n            }))\r\n    }\r\n    useEffect(() => {\r\n\r\n        const temp = localStorage.getItem('todos')\r\n        const loadedTodos = JSON.parse(temp)\r\n        if (loadedTodos) {\r\n            setTodos(loadedTodos)\r\n        }\r\n    }, []);\r\n\r\n    // function getInitialTodos() {\r\n    //     //getting stored item\r\n    //     const temp = localStorage.getItem('todos')\r\n    //     const savedTodos = JSON.parse(temp)\r\n    //     return savedTodos || []\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id\r\n            })\r\n        ])\r\n    }\r\n\r\n    const addTodoItem = (title, completed) => {\r\n        debugger\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: completed\r\n            //  === 'on' ? true : false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n    const UpdateTodoProps = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div className=\"container\">\r\n                        <div className=\"inner\">\r\n                            <Header />\r\n                            <InputTodo addTodoProps={addTodoItem} />\r\n                            <TodosList todos={todos} handleChangeProps={handleChange}\r\n                                deleteTodoProps={delTodo}\r\n                                setUpdate={setUpdate}\r\n                                UpdateTodoProps={UpdateTodoProps}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/about\"> \r\n                    <About />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <NotMatch />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TodoContainer from \"./FunctionBased/components/TodoContainer\"\nimport \"./FunctionBased/App.css\"\nimport { HashRouter  as Router } from \"react-router-dom\"\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <TodoContainer />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\"))"],"sourceRoot":""}